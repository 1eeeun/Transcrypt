file: Module 
	body: list 
		element: ClassDef 
			name: str = A
			bases: list 
			keywords: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = p
							ctx: Store 
					value: Num 
						n: int = 123
				element: FunctionDef 
					name: str = getX
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Attribute 
								value: Name 
									id: str = self
									ctx: Load 
								attr: str = _x
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = setX
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
							element: arg 
								arg: str = value
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = _x
									ctx: Store 
							value: Name 
								id: str = value
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = getY
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Return 
							value: Attribute 
								value: Name 
									id: str = self
									ctx: Load 
								attr: str = _y
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
				element: FunctionDef 
					name: str = setY
					args: arguments 
						args: list 
							element: arg 
								arg: str = self
								annotation: NoneType = None
							element: arg 
								arg: str = value
								annotation: NoneType = None
						vararg: NoneType = None
						kwonlyargs: list 
						kw_defaults: list 
						kwarg: NoneType = None
						defaults: list 
					body: list 
						element: Assign 
							targets: list 
								element: Attribute 
									value: Name 
										id: str = self
										ctx: Load 
									attr: str = _y
									ctx: Store 
							value: Name 
								id: str = value
								ctx: Load 
					decorator_list: list 
					returns: NoneType = None
			decorator_list: list 
		element: Assign 
			targets: list 
				element: Attribute 
					value: Name 
						id: str = A
						ctx: Load 
					attr: str = q
					ctx: Store 
			value: Num 
				n: int = 456
		element: FunctionDef 
			name: str = run
			args: arguments 
				args: list 
					element: arg 
						arg: str = autoTester
						annotation: NoneType = None
				vararg: NoneType = None
				kwonlyargs: list 
				kw_defaults: list 
				kwarg: NoneType = None
				defaults: list 
			body: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a1
							ctx: Store 
					value: Call 
						func: Name 
							id: str = A
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Name 
							id: str = a2
							ctx: Store 
					value: Call 
						func: Name 
							id: str = A
							ctx: Load 
						args: list 
						keywords: list 
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = a1
								ctx: Load 
							attr: str = x
							ctx: Store 
					value: Num 
						n: int = 5
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = a1
								ctx: Load 
							attr: str = y
							ctx: Store 
					value: Num 
						n: int = 6
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = a2
								ctx: Load 
							attr: str = x
							ctx: Store 
					value: Num 
						n: int = 7
				element: Assign 
					targets: list 
						element: Attribute 
							value: Name 
								id: str = a2
								ctx: Load 
							attr: str = y
							ctx: Store 
					value: Num 
						n: int = 8
				element: Expr 
					value: Call 
						func: Attribute 
							value: Name 
								id: str = autoTester
								ctx: Load 
							attr: str = check
							ctx: Load 
						args: list 
							element: Attribute 
								value: Name 
									id: str = a1
									ctx: Load 
								attr: str = x
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a1
									ctx: Load 
								attr: str = y
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a2
									ctx: Load 
								attr: str = x
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a2
									ctx: Load 
								attr: str = y
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a1
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a2
									ctx: Load 
								attr: str = p
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a1
									ctx: Load 
								attr: str = q
								ctx: Load 
							element: Attribute 
								value: Name 
									id: str = a2
									ctx: Load 
								attr: str = q
								ctx: Load 
						keywords: list 
			decorator_list: list 
			returns: NoneType = None