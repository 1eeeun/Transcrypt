#!/usr/bin/env bash

# You can start me with $0 test1,test2,..
# or pointing to a file with one test per line

if [ "x$1" == "xkill" ]; then
    # handy when running this on the local machine
    for i in "" "-9"; do
        killall $i firefox
        killall $i python2
    done
    shift
    sleep 1
fi
here=`dirname "$0"`
tests="$1"
set -x
test ! -e "$here/$tests" || {
    echo "reading tests from file"
    # to comma seped string:
    tests=`awk '{print $1}' < "$here/$tests" | paste -s -d, -`
}
port=8080
export TZ="Europe/Berlin"
G="\e[1;38;5;154m"
R="\e[1;38;5;124m"
O="\e[0m"

test ! -z "$tests" || { echo -e "$R no tests $O"; exit 1; }

if [ "x$1" == "xprepare" ]; then
	sudo ln -s /usr/bin/python3 /usr/bin/python3.5 2>/dev/null
	sudo ln -s /usr/bin/node /usr/bin/nodejs 2>/dev/null
	python3.5 --version
	java -version
	echo "node version: `nodejs --version`"
	echo 'prepare ready'
	exit 0
fi

stop_flag="/tmp/transcrypt_tester_stopflag_$port"
rm -f "$stop_flag"
export DISPLAY=:99.0
/usr/bin/xvfb-run -a firefox  "http://127.0.0.1:$port/do/$tests" &
python2 "$here/test_server.py" $port &
while true; do
    sleep 1
    if [ -e "$stop_flag" ]; then
        cat "$stop_flag" | grep "ERR" && {
            echo -e "$R stopflag with status ERR found $O"
            exit 1
        } || {
            echo -e "$G all well $O"
            exit 0
        }
    fi
    echo '.'
done
echo -e "$R No stopflag found $O"
exit 1
