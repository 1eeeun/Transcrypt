self.x = p.q.r.x

element: Assign 

	targets: list
	
		element: Attribute 
			value: Name 
				id: str = self
				ctx: Load  
			attr: str = x
			ctx: Store
			
	value: Attribute 			value = p.q.r	(attr)	attr = x
		value: Attribute 		value = p.q		(attr)	attr = r
			value: Attribute	value = p		(name)	attr = q
				value: Name 	
					id: str = p (1st emit)
					ctx: Load 
				attr: str = q (2nd emit)
				ctx: Load 
			attr: str = r (3rd emit)
			ctx: Load 
		attr: str = x (4th emit)
		ctx: Load
		
So p.q.r.x should be read as (((p).q).r).x,
in which p is a name and all the others are attributes, so preceded by a . (dot)

First find enclosing scope e:
Then find p in scope e
Then find q in scope e.p
Then find r in e.p.q
Then find x in e.p.q.r

When traversing the parse tree, p, q, r and x are met in that order.
This can be seen by reading the above "indented tree" in successive order.
So lookups in the symbol tables of the scopes are automatically done in the right order.
